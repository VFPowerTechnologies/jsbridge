// AUTO-GENERATED FILE; NO NOT EDIT
function ${className}() {
    if (!(this instanceof ${className}))
        return new ${className};
}

#foreach($m in $methods)
${className}.prototype.${m.name} = function (
#foreach($p in $m.params)
$p.name
#if($foreach.hasNext),#end
#end
) {
    if (arguments.length != $m.params.size())
        throw new Error('Invalid number of arguments: expected $m.params.size(), got ' + arguments.length);

    return new Promise(function (resolve, reject) {
        var args = [];
        #foreach($p in $m.params)
            #if(!$p.isFunctionType())
            args.push($p.name);
            #else
            args.push(window.dispatcher.createListener($p.name));
            #end
        #end

        window.dispatcher.call("$className", "$m.name", JSON.stringify(args), resolve, reject);
    });
}
#end

#if($addModuleExports)
module.exports = {
    $className: $className
};
#end